# Environment
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-8)"
set -g xterm-keys on
set -sg escape-time 0	 # fix vim esc delay: https://github.com/neovim/neovim/wiki/FAQ#esc-in-tmux-or-gnu-screen-is-delayed
set-option -g set-titles on
set-option -g set-titles-string "#{pane_current_command} #{=/-15/...:pane_current_path}"
set -g lock-after-time 0
set -g default-shell /bin/zsh
setw -g mode-keys vi
#set -g default-terminal "screen-256color"
set -g default-terminal "${TERM}"  # tmux recommends against TERM passthrough, but seems fine.
set -g history-limit 10000

# https://github.com/tmux/tmux/issues/911#issuecomment-427944765
# set -as terminal-overrides ',*:Hls=\E]8;id=%p1%s;%p2%s\E\\:Hlr=\E]8;;\E\\,xterm*:smcup@:rmcup@'
set -ga terminal-features "*:hyperlinks"

# From https://github.com/folke/lsp-colors.nvim
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0
#set -ga terminal-overrides ',xterm*:smcup@:rmcup@'
if-shell -b '[ "$(echo "$TMUX_VERSION >= 3.3" | bc)" = 1 ]' \
  "set-option -g allow-passthrough on"
# disable mouse? to allow terminal selection
set -g mouse on
set -g update-environment "SSH_CLIENT SSH_TTY DISPLAY SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION XAUTHORITY SSH_AGENT_PID"

set-option -ga terminal-override ',rxvt-uni*:XT:Ms=\E]52;%p1%s;%p2%s\007'

set -g bell-action other  # Show bell from other windows
set -g visual-bell off
set -g monitor-bell on

# UI
set-option -g status on
set-option -g status-interval 4
#set-option -g status-utf8 on
set-option -g status-justify "left"
set-option -g status-left-length 60
set-option -g status-right-length 90
set -g status-fg black
set -g status-bg colour141
set -g status-left "#(~/.tmux/powerline.sh left) "
#set -g status-right "#(acpi |cut -d ' ' -f 4 | sed 's/,//g') #(sensors |grep 'coretemp' -C 5 |tail -n4 |head -n1 |egrep -o '[0-9.]+Â°C' |head -n1 |sed 's/.0//')|%m-%d %H:%M" # %d-%b-%y
set -g status-right "#(~/.tmux/powerline.sh right)" # %d-%b-%y
set -g status-keys vi
set -g base-index 1
setw -g window-status-style dim
setw -g window-status-bell-style none
setw -g window-status-current-style bright,bold
#setw -g window-status-format "#[fg=dimmagenta]#[bg=colour8] #I #[bg=colour27]#[fg=black] #W "
setw -g window-status-format "#[fg=dimmagenta]#[bg=colour8] #{?window_bell_flag,ðŸ””,#I} #[bg=colour27]#[fg=black] #W "
setw -g window-status-current-format "#[fg=colour201]#[bg=colour141]î‚²#[bg=magenta]#[fg=black]#I #[fg=black]#[bg=colour39] #W#[fg=colour51]#[bg=colour141]î‚°"

set -g pane-active-border-style fg=yellow,bg=black

# main bind key
unbind C-b
unbind C-Left
unbind C-Right
set -g prefix C-q
bind C-q send-prefix

# pane
bind k selectp -U
bind j selectp -D
bind h selectp -L
bind l selectp -R

#bind ^k resizep -U 10
#bind ^j resizep -D 10
#bind ^h resizep -L 10
#bind ^l resizep -R 10
# Natural resizing (k always larger, j always smaller):
bind ^k {
  if -F '#{pane_at_bottom}' { resizep -U 10 } {
    if -F '#{pane_at_top}' { resizep -D 10 } {
      resizep -D 5; selectp -U; resizep -U 5; selectp -D
    } } }
bind ^j {
  if -F '#{pane_at_bottom}' { resizep -D 10 } {
    if -F '#{pane_at_top}' { resizep -U 10 } {
      resizep -U 5; selectp -U; resizep -D 5; selectp -D
    } } }
bind ^l {
  if -F '#{pane_at_left}' { resizep -R 10 } {
    if -F '#{pane_at_right}' { resizep -L 10 } {
      resizep -R 5; selectp -L; resizep -L 5; selectp -R
    } } }
bind ^h {
  if -F '#{pane_at_left}' { resizep -L 10 } {
    if -F '#{pane_at_right}' { resizep -R 10 } {
      resizep -L 5; selectp -L; resizep -R 5; selectp -R
    } } }
bind v splitw -h
bind V splitw -h -l 120
bind / command-prompt 'split-window -h "man %%"'
bind enter next-layout

bind '"' split-window -vc "#{pane_current_path}"
bind '%' split-window -hc "#{pane_current_path}"
bind 'c' new-window -c "#{pane_current_path}"

# window
bind C-o rotate-window
bind -n ^t neww -c "#{pane_current_path}"
bind -n M-h prev
bind -n M-l next
# rebind for copy-mode
# would come back in 2.5? (https://github.com/tmux/tmux/issues/939)
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
	"bind -Tcopy-mode-vi M-h prev; \
	 bind -Tcopy-mode-vi M-l next; \
	 bind -Tcopy-mode-vi ^t neww -c \"\#\{pane_current_path\}\"; "

bind A command-prompt "rename-window %%"
bind Space command-prompt "joinp -t :%%"
bind u run ~/.tmux/tmux-url-select

# scroll
bind K copy-mode -u

if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
  "bind -Tcopy-mode-vi K send -X page-up; \
		bind -Tcopy-mode-vi J send -X page-down;"

if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
  "bind -Tcopy-mode-vi u send -X page-up; \
		bind -Tcopy-mode-vi d send -X page-down;"

# For tmux<2.4:
#bind -t vi-copy K page-up
#bind -t vi-copy J page-down

# clipboard
set -gs set-clipboard on  # Support OSC52
if-shell "uname | grep -q Darwin" "source-file ~/.tmux/tmux-macos" "source-file ~/.tmux/tmux-linux"

# 'bind z' to temporarily zoom pane to full window
# 'bind alt-1,2' to toggle horiz/vert layout

# open current buffer with vim
bind-key C-m capture-pane -S -102400 -J \; new-window -a 'vim -c ":read !tmux save-buffer - ; tmux delete-buffer;" -c ":normal gg" -c ":set buftype=nofile" -c ":silent! ChompWhitespace"'


set -g @tpm_plugins '               \
  tmux-plugins/tpm        \
  tmux-plugins/tmux-resurrect     \
  tmux-plugins/tmux-yank   \
  tmux-plugins/tmux-logging   \
'

if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
run -b '~/.tmux/plugins/tpm/tpm'

# Read local overrides
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'
